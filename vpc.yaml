AWSTemplateFormatVersion: 2010-09-09
Description: Test Custom Resource and VPC creation

Parameters:
  CloudHSMVPCCidr:
    Description: VPC CIDR Block
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  PublicSubnetCidrAZ1:
    Description: VPC CIDR Block
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  PublicSubnetCidrAZ2:
    Description: VPC CIDR Block
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  PrivateSubnetCidrAZ1:
    Description: VPC CIDR Block
    Type: String
    Default: 10.0.10.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
  PrivateSubnetCidrAZ2:
    Description: VPC CIDR Block
    Type: String
    Default: 10.0.11.0/24
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'

Resources: 
  lookupCloudHSMv2AZ:
    Type: AWS::Lambda::Function
    Properties:
      MemorySize: 128
      Role: !GetAtt lookupCloudHSMv2AZRole.Arn
      Runtime: python3.8
      Timeout: 30
      Code:
        ZipFile: |
          import boto3
          import cfnresponse

          def lambda_handler(event, context):
              ec2 = boto3.client('ec2')
              svc_details = ec2.describe_vpc_endpoint_services(
                ServiceNames=["com.amazonaws.{}.cloudhsmv2".format(boto3.Session().region_name)])['ServiceDetails'][0]
              responseData = {
                'AZ1': svc_details['AvailabilityZones'][0],
                'AZ2': svc_details['AvailabilityZones'][1]
              }
              cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, "lookupCloudHSMv2AZ")

      Handler: index.lambda_handler
  lookupCloudHSMv2AZRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
  lookupAZCloudHSMv2Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "lookupAZCloudHSMv2"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - ec2:Describe*
            Resource: "*"
            Condition:
              'ForAllValues:StringEquals':
                'aws:PrincipalAccount': !Sub '${AWS::AccountId}'
                'aws:RequestedRegion': !Sub '${AWS::Region}'
      Roles:
        - !Ref lookupCloudHSMv2AZRole
  lookupCloudHSMv2AZCR:
    Type: Custom::lookupCloudHSMv2AZCR
    Properties:
      ServiceToken: !GetAtt lookupCloudHSMv2AZ.Arn
      Region: !Ref AWS::Region
  CloudHSMVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CloudHSMVPCCidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP1
        - AllocationId
      SubnetId: !Ref PublicSubnetAZ1
  EIP1:
    DependsOn: GatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP2
        - AllocationId
      SubnetId: !Ref PublicSubnetAZ2
  EIP2:
    DependsOn: GatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref CloudHSMVPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: {Ref: 'AWS::StackName'}
      VpcId: !Ref CloudHSMVPC
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: {Ref: 'AWS::StackName'}
      VpcId: !Ref CloudHSMVPC
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: {Ref: 'AWS::StackName'}
      VpcId: !Ref CloudHSMVPC
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  PublicSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !GetAtt lookupCloudHSMv2AZCR.AZ1
      CidrBlock: !Ref PublicSubnetCidrAZ1
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, 'PublicSubnetAZ1']
      VpcId: !Ref CloudHSMVPC
  PublicSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !GetAtt lookupCloudHSMv2AZCR.AZ2
      CidrBlock: !Ref PublicSubnetCidrAZ2
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, 'PublicSubnetAZ2']
      VpcId: !Ref CloudHSMVPC
  PrivateSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !GetAtt lookupCloudHSMv2AZCR.AZ1
      CidrBlock: !Ref PrivateSubnetCidrAZ1
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, 'PrivateSubnetAZ1']
      VpcId: !Ref CloudHSMVPC
  PrivateSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !GetAtt lookupCloudHSMv2AZCR.AZ2
      CidrBlock: !Ref PrivateSubnetCidrAZ2
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, 'PrivateSubnetAZ2']
      VpcId: !Ref CloudHSMVPC
  PublicSubnetAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAZ1
  PublicSubnetAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAZ2
  PrivateSubnetAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnetAZ1
  PrivateSubnetAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnetAZ2

Outputs:
  CloudHSMVPCId:
    Description: VPC Id
    Value:
      !Ref CloudHSMVPC
  CloudHSMv2AZ1:
    Description: 1st AZ for CloudHSMv2 for a given region
    Value:
      !GetAtt lookupCloudHSMv2AZCR.AZ1
  CloudHSMv2AZ2:
    Description: 2nd AZ for CloudHSMv2 for a given region
    Value:
      !GetAtt lookupCloudHSMv2AZCR.AZ2